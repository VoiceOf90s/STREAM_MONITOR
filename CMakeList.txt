cmake_minimum_required(VERSION 3.15)
project(TwitchStreamMonitor VERSION 2.1.0 LANGUAGES CXX)

# Установка стандарта C++
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Поиск библиотеки CURL
find_package(CURL REQUIRED)

# Определение исполняемого файла
add_executable(stream_monitor
    main.cpp
    StreamMonitor.cpp
    Config.cpp
)

# Подключение заголовочных файлов
target_include_directories(stream_monitor PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CURL_INCLUDE_DIRS}
)

# Линковка библиотек
target_link_libraries(stream_monitor PRIVATE
    ${CURL_LIBRARIES}
)

# Windows-specific линковка
if(WIN32)
    target_link_libraries(stream_monitor PRIVATE ws2_32)
endif()

# Дополнительные флаги компиляции
if(MSVC)
    target_compile_options(stream_monitor PRIVATE /W4)
else()
    target_compile_options(stream_monitor PRIVATE -Wall -Wextra -pedantic)
endif()

# Установка
install(TARGETS stream_monitor DESTINATION bin)

# Сообщение о конфигурации
message(STATUS "═══════════════════════════════════════")
message(STATUS "Twitch Stream Monitor v2.1")
message(STATUS "═══════════════════════════════════════")
message(STATUS "  C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "  Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "  CURL Found: ${CURL_FOUND}")
message(STATUS "  CURL Version: ${CURL_VERSION_STRING}")
message(STATUS "")
message(STATUS "  New in v2.1:")
message(STATUS "    - Configuration file support")
message(STATUS "    - HTTP/2 support")
message(STATUS "    - DNS caching")
message(STATUS "    - HEAD request pre-check")
message(STATUS "═══════════════════════════════════════")