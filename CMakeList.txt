cmake_minimum_required(VERSION 3.15)
project(TwitchStreamMonitor VERSION 2.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Явное указание пути к curl
set(CURL_INCLUDE_DIR "C:/curl/include")
set(CURL_LIBRARY "C:/curl/lib")

# Находим библиотеку curl
find_library(CURL_LIB 
    NAMES curl libcurl libcurl_a
    PATHS ${CURL_LIBRARY}
    NO_DEFAULT_PATH
)

add_executable(stream_monitor
    main.cpp
    StreamMonitor.cpp
)

target_include_directories(stream_monitor PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CURL_INCLUDE_DIR}
)

target_link_libraries(stream_monitor PRIVATE
    ${CURL_LIB}
    ws2_32
    wldap32
    crypt32
    normaliz
)

if(MSVC)
    target_compile_options(stream_monitor PRIVATE /W4)
else()
    target_compile_options(stream_monitor PRIVATE -Wall -Wextra -pedantic)
endif()

message(STATUS "═══════════════════════════════════════")
message(STATUS "Twitch Stream Monitor - Windows Build")
message(STATUS "═══════════════════════════════════════")
message(STATUS "  C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "  CURL Include: ${CURL_INCLUDE_DIR}")
message(STATUS "  CURL Library: ${CURL_LIB}")
message(STATUS "═══════════════════════════════════════")